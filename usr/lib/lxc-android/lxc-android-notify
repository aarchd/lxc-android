#!/bin/sh

# When this script starts, the container is starting-up.
# On Android 10+ devices, we need to properly replicate APEX bind-mounts
# on the host system.

LXC_ROOTFS=/var/lib/lxc/android/rootfs

info() {
    printf 'I: %s\n' "$*"
}

warning() {
    printf 'W: %s\n' "$*" >&2
}

error() {
    printf 'E: %s\n' "$*" >&2
    exit 1
}

get_source_apex_name() {
    name=$(printf '%s' "$1" | sed -E 's|\.v[0-9]+$||')
    for choice in "$name" "$name.release" "$name.debug" "$name.current"; do
        [ -e "/android/system/apex/$choice" ] && { printf '%s\n' "$choice"; return; }
    done
}

# Get Android container version
ANDROID_SDK_VERSION=$(sed -n 's/^ro.build.version.sdk=\([0-9]*\)$/\1/p' "$LXC_ROOTFS/system/build.prop")
[ "$(getconf LONG_BIT)" = 32 ] && LIBDIR=lib || LIBDIR=lib64

# Wait for the container
lxc-wait -n android -t 10 -s RUNNING

if [ "$ANDROID_SDK_VERSION" -ge 29 ]; then
    info "Detected Android 10+ container"

  # Wait for apex to show up
  HYBRIS_LD_LIBRARY_PATH="/android/system/apex/com.android.runtime/$LIBDIR/bionic:/android/system/apex/com.android.runtime.release/$LIBDIR/bionic:/android/system/apex/com.android.runtime.debug/$LIBDIR/bionic:/android/system/$LIBDIR" \
      WAITFORSERVICE_VALUE=ready \
      /usr/bin/waitforservice apexd.status

  info "apexd ready, replicating bind-mounts"
  for mpoint in /apex/*; do
      # TODO: Actually determine from where the directory has been bind-mounted
      # from, and support non-flattened apexes
      [ -d "$mpoint" ] || continue
      case $mpoint in
          */*@*) continue ;;
      esac
      apex=${mpoint##*/}
      source_apex=$(get_source_apex_name "$apex")
      [ -z "$source_apex" ] && { warning "Unable to find source apex for apex $apex"; continue; }
      source="/android/system/apex/$source_apex"
      [ -d "$source" ] && { info "Replicating bind-mount for apex $apex"; mount --bind "$source" "/apex/$apex"; }
  done
fi

# Notify systemd we're done
systemd-notify --ready --status="Container ready"

# Block on lxc-wait
lxc-wait -n android -s STOPPED

# vim: set ft=sh ts=4 sw=4 et:
